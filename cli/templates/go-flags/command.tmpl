{{define "command" -}}
package {{.Collect "command" | join ""}}
{{- $badkeys := list "type" "default"}}

import (
    "github.com/jessevdk/go-flags"
)

// Command for {{.Name}}
type Command struct {
    {{- with .Child "args"}}
    {{- if .Body}}
    Args struct {
    {{- end}}
    {{- range .Body}}
        {{ title .Name }} {{.Key "type"}} `
        {{- range $key, $value := .Keys }}
        {{- if has $key $badkeys}}{{else}}{{$key}}:"{{$value}}" {{end}}{{end}}`
    {{- end}}
    {{- if .Body}}
    } `positional-args:"true" required:"true"`
    {{- end}}
    {{- end}}
    {{- with .Child "options"}}
    {{- range .Body}}
    {{ title .Name }} {{.Key "type"}} `
        {{- range $key, $value := .Keys }}
        {{- if has $key $badkeys}}{{else}}{{$key}}:"{{$value}}" {{end}}
        {{- end}}`
    {{- end}}
    {{- end}}
}

// AddCommand {{.Name}} to the parser
func AddCommand(parser *flags.Parser) error {
	_, err := parser.AddCommand("{{.Name}}",
		"{{.Keys.short}}",
        {{- with .Child "desc"}}
		`{{.Content}}`,
        {{- else}}
        ``
        {{- end}}
		&Command{},
	)
	return err
}
{{end}}